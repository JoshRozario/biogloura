{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id); //console.log(product + \"wow\" + this.state.products);\n\n      return product;\n    };\n\n    this.getItemAlt = id => {\n      const products = this.updateProducts();\n      const product = products.find(item => item.id === id);\n      console.log(products + \"wow somehthing:\" + product);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      const inCart = this.updateCart();\n      const products = this.updateProducts();\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      products.forEach(test => {\n        console.log(test.price);\n        const wait = products.filter(item => item.id == id);\n        console.log(wait);\n      });\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...inCart, product]\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n        localStorage.setItem('Products', JSON.stringify(this.state.products));\n        console.log(this.state.cart);\n      });\n    };\n\n    this.increment = id => {\n      console.log('this is an increment');\n    };\n\n    this.decrement = id => {\n      console.log('this is an Decrement');\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('State', JSON.stringify(this.state));\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      }, () => {});\n    };\n  }\n\n  updateCart() {\n    let cart = JSON.parse(localStorage.getItem(\"Cart\"));\n\n    if (cart != null) {\n      return cart;\n    }\n\n    return [];\n  }\n\n  updateProducts() {\n    let product = JSON.parse(localStorage.getItem(\"Products\"));\n\n    if (product != null) {\n      return product;\n    }\n\n    return [];\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    const inCart = this.updateCart();\n    this.setState(() => {\n      return {\n        cart: [...inCart]\n      };\n    }, () => {\n      this.addTotals();\n      localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      localStorage.setItem('Products', JSON.stringify(this.state.products));\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      localStorage.setItem('Products', JSON.stringify(this.state.products));\n    }\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Joshua\\Documents\\GitHub\\biogloura\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","getItemAlt","updateProducts","console","log","handleDetail","addToCart","inCart","updateCart","index","indexOf","test","price","wait","filter","count","total","addTotals","localStorage","setItem","JSON","stringify","increment","decrement","removeItem","tempCart","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartSubTotal","parse","componentDidMount","componentDidUpdate","prevProps","prevState","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {storeProducts, detailProduct} from './data'\r\n\r\nconst ProductContext = React.createContext()\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        products: [], \r\n        detailProduct: detailProduct,\r\n        cart: [],\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n\r\n\r\n    updateCart(){\r\n        let cart = JSON.parse(localStorage.getItem(\"Cart\"));\r\n        if (cart != null){\r\n            return cart\r\n        }\r\n        return [];\r\n        \r\n    }\r\n\r\n    updateProducts(){\r\n        let product = JSON.parse(localStorage.getItem(\"Products\"));\r\n        if (product != null){\r\n            return product\r\n        }\r\n        return [];\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setProducts();\r\n\r\n        const inCart = this.updateCart();\r\n\r\n        this.setState(()=>{\r\n            return {cart:[...inCart]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n            \r\n        });\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state !== prevState) {\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n        }\r\n      }\r\n    \r\n\r\n    setProducts = () =>{\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts,singleItem];\r\n        });\r\n        this.setState(()=>{\r\n            return {products: tempProducts}\r\n        });\r\n        \r\n    }\r\n\r\n\r\n\r\n    getItem = (id) =>{\r\n        const product = this.state.products.find(item => item.id === id);\r\n        //console.log(product + \"wow\" + this.state.products);\r\n        return product; \r\n    }\r\n\r\n    getItemAlt = (id) =>{\r\n        const products = this.updateProducts();\r\n        const product = products.find(item => item.id === id);\r\n        console.log(products + \"wow somehthing:\" + product);\r\n        return product; \r\n    }\r\n\r\n    handleDetail = (id) =>{ \r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })        \r\n    }\r\n    \r\n    addToCart = id =>{\r\n\r\n        const inCart = this.updateCart();\r\n \r\n        const products = this.updateProducts();\r\n\r\n        \r\n        \r\n        let tempProducts = [...this.state.products];   \r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        const product = tempProducts[index];\r\n \r\n        products.forEach((test) => {   \r\n            console.log(test.price);\r\n            const wait = products.filter(item => item.id == id);\r\n            console.log(wait);\r\n        })\r\n\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n\r\n\r\n\r\n        \r\n\r\n        this.setState(()=>{\r\n            return {products:[...tempProducts],cart:[...inCart,product]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n            console.log(this.state.cart);\r\n        });\r\n\r\n       \r\n    };\r\n         \r\n    \r\n    \r\n    increment = (id) =>{\r\n        console.log('this is an increment')\r\n\r\n    }\r\n\r\n    decrement = (id) =>{\r\n        console.log('this is an Decrement')\r\n        \r\n    }\r\n    \r\n    removeItem = (id) => {\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item => item.id !== id);\r\n        \r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart = false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n\r\n        this.setState(()=>{\r\n            return {\r\n                cart:[...tempCart],\r\n                products:[...tempProducts],    \r\n            }\r\n        },\r\n        () => {\r\n            this.addTotals();\r\n            localStorage.setItem('State',JSON.stringify(this.state));\r\n        }\r\n        )\r\n    }\r\n\r\n    clearCart = () =>{\r\n        this.setState(()=>{\r\n            return {cart:[]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            \r\n        });\r\n    }\r\n\r\n    addTotals = () =>{\r\n        let subTotal = 0;\r\n        this.state.cart.map(item => (subTotal += item.total));\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax\r\n        this.setState (()=>{\r\n            return {\r\n                cartSubTotal: subTotal,\r\n                cartTax: tax,\r\n                cartTotal:total\r\n            }\r\n            },() => {\r\n                \r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n                return (\r\n                    <ProductContext.Provider value = {{\r\n                        ...this.state,\r\n                        handleDetail: this.handleDetail,\r\n                        addToCart: this.addToCart,\r\n                        increment: this.increment,\r\n                        decrement: this.decrement,\r\n                        removeItem: this.removeItem,\r\n                        clearCart: this.clearCart\r\n                    }}>\r\n                    {this.props.children} \r\n                    </ProductContext.Provider>\r\n                )\r\n        }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}