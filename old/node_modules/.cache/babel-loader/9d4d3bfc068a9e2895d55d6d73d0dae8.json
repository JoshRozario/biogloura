{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: storeProducts,\n      detailProduct: detailProduct,\n      cart: [],\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0 //componentDidMount(){\n      //    const savedState = JSON.parse(localStorage.getItem(\"State\"))\n      //    this.setProducts({...savedState});\n      //}\n\n    };\n\n    this.preStateSet = () => {\n      const savedState = JSON.parse(localStorage.getItem(\"State\"));\n      this.setState(() => {\n        return {\n          products: [savedState.products],\n          cart: [savedState.product]\n        };\n      }, () => {\n        console.log(\"loaded state\");\n      });\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      }, () => {\n        localStorage.setItem('State', JSON.stringify(this.state));\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      this.preStateSet();\n    };\n\n    this.increment = id => {\n      console.log('this is an increment');\n    };\n\n    this.decrement = id => {\n      console.log('this is an Decrement');\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('State', JSON.stringify(this.state));\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('State', JSON.stringify(this.state));\n        console.log(\"test\");\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      }, () => {\n        localStorage.setItem('State', JSON.stringify(this.state));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Joshua\\Documents\\GitHub\\biogloura\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","cartSubTotal","cartTax","cartTotal","preStateSet","savedState","JSON","parse","localStorage","getItem","setState","product","console","log","setProducts","tempProducts","forEach","item","singleItem","setItem","stringify","id","find","handleDetail","addToCart","increment","decrement","removeItem","tempCart","filter","index","indexOf","removedProduct","inCart","count","total","addTotals","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {storeProducts, detailProduct} from './data'\r\n\r\nconst ProductContext = React.createContext()\r\n\r\nclass ProductProvider extends Component {\r\n    state = {\r\n        products: storeProducts, \r\n        detailProduct: detailProduct,\r\n        cart: [],\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n\r\n    //componentDidMount(){\r\n    //    const savedState = JSON.parse(localStorage.getItem(\"State\"))\r\n    //    this.setProducts({...savedState});\r\n    //}\r\n\r\n    preStateSet = () =>{\r\n        const savedState = JSON.parse(localStorage.getItem(\"State\"))\r\n        this.setState(()=>{\r\n            return {products:[savedState.products],cart:[savedState.product]};\r\n        },()=>{ \r\n            console.log(\"loaded state\");\r\n        });\r\n    }\r\n\r\n    setProducts = () =>{\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts,singleItem];\r\n    \r\n        })\r\n        this.setState(()=>{\r\n            return {products:tempProducts}\r\n        },()=>{ \r\n            localStorage.setItem('State',JSON.stringify(this.state));\r\n        });\r\n    }\r\n\r\n    getItem = (id) =>{\r\n        const product = this.state.products.find(item => item.id === id);\r\n        return product; \r\n    }\r\n\r\n    handleDetail = (id) =>{ \r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })        \r\n    }\r\n    \r\n    addToCart = id =>{\r\n        this.preStateSet();\r\n    };\r\n         \r\n    \r\n    \r\n    increment = (id) =>{\r\n        console.log('this is an increment')\r\n\r\n    }\r\n\r\n    decrement = (id) =>{\r\n        console.log('this is an Decrement')\r\n        \r\n    }\r\n    \r\n    removeItem = (id) => {\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item => item.id !== id);\r\n        \r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart = false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n\r\n        this.setState(()=>{\r\n            return {\r\n                cart:[...tempCart],\r\n                products:[...tempProducts],    \r\n            }\r\n        },\r\n        () => {\r\n            this.addTotals();\r\n            localStorage.setItem('State',JSON.stringify(this.state));\r\n        }\r\n        )\r\n    }\r\n\r\n    clearCart = () =>{\r\n        this.setState(()=>{\r\n            return {cart:[]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('State',JSON.stringify(this.state));\r\n            console.log(\"test\");\r\n        });\r\n    }\r\n\r\n    addTotals = () =>{\r\n        let subTotal = 0;\r\n        this.state.cart.map(item => (subTotal += item.total));\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax\r\n        this.setState (()=>{\r\n            return {\r\n                cartSubTotal: subTotal,\r\n                cartTax: tax,\r\n                cartTotal:total\r\n            }\r\n            },() => {\r\n                localStorage.setItem('State',JSON.stringify(this.state));\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n                return (\r\n                    <ProductContext.Provider value = {{\r\n                        ...this.state,\r\n                        handleDetail: this.handleDetail,\r\n                        addToCart: this.addToCart,\r\n                        increment: this.increment,\r\n                        decrement: this.decrement,\r\n                        removeItem: this.removeItem,\r\n                        clearCart: this.clearCart\r\n                    }}>\r\n                    {this.props.children} \r\n                    </ProductContext.Provider>\r\n                )\r\n        }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}