{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Joshua\\\\Documents\\\\GitHub\\\\biogloura\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let product = JSON.parse(localStorage.getItem(\"Products\"));\n\n      if (product.length == null) {\n        console.log(\"localStorage was empty\");\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n          const singleItem = _objectSpread({}, item);\n\n          tempProducts = [...tempProducts, singleItem];\n        });\n        this.setState(() => {\n          console.log(tempProducts);\n          return {\n            products: tempProducts\n          };\n        });\n      } else {\n        let tempProducts = product;\n        this.setState(() => {\n          console.log(tempProducts);\n          return {\n            products: tempProducts\n          };\n        });\n      }\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id); //console.log(product + \"wow\" + this.state.products);\n\n      return product;\n    };\n\n    this.getItemAlt = id => {\n      const products = this.updateProducts();\n      const product = products.find(item => item.id === id);\n      console.log(products + \"wow somehthing:\" + product);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      const inCart = this.updateCart();\n      const products = this.updateProducts();\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const wait = products.filter(item => item.id === id);\n      const temp = tempProducts.filter(item => item.id !== id); //console.log(wait);\n      //console.log(tempProducts);\n\n      const product = wait[0];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      wait[0] = product;\n      console.log(temp);\n      console.log(wait);\n      console.log(tempProducts);\n      tempProducts = [...temp, ...wait];\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...inCart, product]\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n        localStorage.setItem('Products', JSON.stringify(this.state.products)); // console.log(this.state.cart);\n      });\n    };\n\n    this.increment = id => {\n      console.log('this is an increment');\n    };\n\n    this.decrement = id => {\n      console.log('this is an Decrement');\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('State', JSON.stringify(this.state));\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.addTotals();\n        localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      }, () => {});\n    };\n  }\n\n  updateCart() {\n    let cart = JSON.parse(localStorage.getItem(\"Cart\"));\n\n    if (cart != null) {\n      return cart;\n    }\n\n    return [];\n  }\n\n  updateProducts() {\n    let product = JSON.parse(localStorage.getItem(\"Products\"));\n\n    if (product != null) {\n      return product;\n    }\n\n    return [];\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    const inCart = this.updateCart();\n    this.setState(() => {\n      return {\n        cart: [...inCart]\n      };\n    }, () => {\n      this.addTotals();\n      localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      localStorage.setItem('Products', JSON.stringify(this.state.products));\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      localStorage.setItem('Cart', JSON.stringify(this.state.cart));\n      localStorage.setItem('Products', JSON.stringify(this.state.products));\n    }\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["C:\\Users\\Joshua\\Documents\\GitHub\\biogloura\\src\\context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","cartTax","cartTotal","setProducts","product","JSON","parse","localStorage","getItem","length","console","log","tempProducts","forEach","item","singleItem","setState","id","find","getItemAlt","updateProducts","handleDetail","addToCart","inCart","updateCart","index","indexOf","wait","filter","temp","count","price","total","addTotals","setItem","stringify","increment","decrement","removeItem","tempCart","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartSubTotal","componentDidMount","componentDidUpdate","prevProps","prevState","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {storeProducts, detailProduct} from './data'\r\n\r\nconst ProductContext = React.createContext()\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        products: [], \r\n        detailProduct: detailProduct,\r\n        cart: [],\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n\r\n\r\n    updateCart(){\r\n        let cart = JSON.parse(localStorage.getItem(\"Cart\"));\r\n        if (cart != null){\r\n            return cart\r\n        }\r\n        return [];\r\n        \r\n    }\r\n\r\n    updateProducts(){\r\n        let product = JSON.parse(localStorage.getItem(\"Products\"));\r\n        if (product != null){\r\n            return product\r\n        }\r\n        return [];\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n            this.setProducts();\r\n        \r\n\r\n        const inCart = this.updateCart();\r\n\r\n        this.setState(()=>{\r\n            return {cart:[...inCart]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n            \r\n        });\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state !== prevState) {\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n        }\r\n      }\r\n    \r\n\r\n    setProducts = () =>{\r\n        let product = JSON.parse(localStorage.getItem(\"Products\"));\r\n        if (product.length == null){\r\n            console.log(\"localStorage was empty\")\r\n            let tempProducts = [];\r\n            storeProducts.forEach(item =>{\r\n                const singleItem = {...item};\r\n                tempProducts = [...tempProducts,singleItem];\r\n            });\r\n            this.setState(()=>{\r\n                console.log(tempProducts);\r\n                return {products: tempProducts}\r\n                \r\n            });\r\n        }else{\r\n            let tempProducts = product;\r\n            this.setState(()=>{\r\n                console.log(tempProducts);\r\n                return {products: tempProducts}  \r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    getItem = (id) =>{\r\n        const product = this.state.products.find(item => item.id === id);\r\n        //console.log(product + \"wow\" + this.state.products);\r\n        return product; \r\n    }\r\n\r\n    getItemAlt = (id) =>{\r\n        const products = this.updateProducts();\r\n        const product = products.find(item => item.id === id);\r\n        console.log(products + \"wow somehthing:\" + product);\r\n        return product; \r\n    }\r\n\r\n    handleDetail = (id) =>{ \r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })        \r\n    }\r\n    \r\n    addToCart = id =>{\r\n\r\n        const inCart = this.updateCart();\r\n \r\n        const products = this.updateProducts();\r\n\r\n        \r\n        \r\n        let tempProducts = [...this.state.products];   \r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        \r\n        \r\n\r\n        const wait = products.filter(item => item.id === id);\r\n        const temp = tempProducts.filter(item => item.id !== id);\r\n\r\n        //console.log(wait);\r\n        //console.log(tempProducts);\r\n        \r\n        const product = wait[0];\r\n\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n\r\n        wait[0] = product;\r\n        console.log(temp);\r\n        console.log(wait);\r\n        console.log(tempProducts);\r\n        tempProducts = [...temp,...wait];\r\n\r\n        this.setState(()=>{\r\n            return {products:[...tempProducts],cart:[...inCart,product]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            localStorage.setItem('Products', JSON.stringify(this.state.products));\r\n            // console.log(this.state.cart);\r\n        });\r\n\r\n       \r\n    };\r\n         \r\n    \r\n    \r\n    increment = (id) =>{\r\n        console.log('this is an increment')\r\n\r\n    }\r\n\r\n    decrement = (id) =>{\r\n        console.log('this is an Decrement')\r\n        \r\n    }\r\n    \r\n    removeItem = (id) => {\r\n        let tempProducts = [...this.state.products];\r\n        let tempCart = [...this.state.cart];\r\n\r\n        tempCart = tempCart.filter(item => item.id !== id);\r\n        \r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n        let removedProduct = tempProducts[index];\r\n        removedProduct.inCart = false;\r\n        removedProduct.count = 0;\r\n        removedProduct.total = 0;\r\n\r\n        this.setState(()=>{\r\n            return {\r\n                cart:[...tempCart],\r\n                products:[...tempProducts],    \r\n            }\r\n        },\r\n        () => {\r\n            this.addTotals();\r\n            localStorage.setItem('State',JSON.stringify(this.state));\r\n        }\r\n        )\r\n    }\r\n\r\n    clearCart = () =>{\r\n        this.setState(()=>{\r\n            return {cart:[]};\r\n        },()=>{ \r\n            this.addTotals();\r\n            localStorage.setItem('Cart',JSON.stringify(this.state.cart));\r\n            \r\n        });\r\n    }\r\n\r\n    addTotals = () =>{\r\n        let subTotal = 0;\r\n        this.state.cart.map(item => (subTotal += item.total));\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax\r\n        this.setState (()=>{\r\n            return {\r\n                cartSubTotal: subTotal,\r\n                cartTax: tax,\r\n                cartTotal:total\r\n            }\r\n            },() => {\r\n                \r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n                return (\r\n                    <ProductContext.Provider value = {{\r\n                        ...this.state,\r\n                        handleDetail: this.handleDetail,\r\n                        addToCart: this.addToCart,\r\n                        increment: this.increment,\r\n                        decrement: this.decrement,\r\n                        removeItem: this.removeItem,\r\n                        clearCart: this.clearCart\r\n                    }}>\r\n                    {this.props.children} \r\n                    </ProductContext.Provider>\r\n                )\r\n        }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}